<컬렉션 프레임워크>

-  다수의 데이터를 쉽고 효과적으로 처리할 수 있는 
   표준화된 방법을 제공하는 클래스의 집합

- 데이터를 저장하는 자료 구조와 데이터를 처리하는 알고리즘을 구조화하여 클래스로 구현




<주요 인터페이스> 

1. List 인터페이스(List 컬렉션)

- 순서가 있는 데이터의 집합, 데이터의 중복을 허용
- 구현 클래스 : Vector, ArrayList, LinkedList, Stack, Queue


** ArrayList **

- List 인터페이스의 대표적인 구현 클래스

- 객체 생성 방법 : List<String> list = new ArrayList<String>();
                   List<String> list = new ArrayList<>();

- 기본 생성자로 ArrayList 객체 생성하면 내부에 10개의 객체를 저장할 수 있는
  초기 용량 가짐, 저장되는 객체 수 늘어나면 자동으로 용량 증가

- 인덱스 객체 제거하면 바로 뒤 인덱스부터 마지막까지 모두 1씩 당겨짐




2. Set 인터페이스 

- 순서가 없는 데이터의 집합, 데이터의 중복을 허용하지 않음
- 구현 클래스 : HashSet, TreeSet




3. Map 인터페이스

- 키와 값의 한 쌍으로 이루어지는 데이터의 집합, 순서가 없음
  키는 중복을 허용하지 않지만, 값은 중복될 수 있음
- 구현 클래스 : HashMap, TreeMap, Hashtable, Properties





