< Class 객체 얻기 >


1. 클래스로부터 얻는 방법 (클래스 이름만 가지고 Class 객체 얻는 방법)

- Class clazz = 클래스이름.class
ex) Class clazz = Car.class;

- Class clazz = Class.forName("패키지..클래스 이름")
ex) Class clazz = Class.forName("sec01.exam08.Car");


2. 객체로부터 얻는 방법 (객체가 이미 생성되어 있을 경우)

- Class clazz = 참조변수.getClass();
ex) Car car = new Car();
    Class clazz = car.getClass();


< 클래스 경로를 활용해서 리소스 절대 경로 얻기 >

- Class 객체는 해당 클래스의 파일 경로 정보를 가지고 있기 때문에 이 경로를 활용해서
  다른 리소스 파일(이미지, XML, Property 파일)의 경로를 얻을 수 있음

ex)  Class clazz = Car.class;

String photo1 = clazz.getResource("photo1.jpg").getPath();
String photo2 = clazz.getResource("images/photo2.jpg").getPath();   -> 경로 출력됨



< 바이트 배열을 문자열로 변환 >

- 파일의 내용을 읽거나, 네트워크를 통해 받은 데이터는 보통 byte[] 배열이므로 
  이것을 문자열로 변환하기 위해 사용됨

-  String str = new String(byte[] bytes);
   String str = new String(byte[] bytes, String charsetName);

ex) byte[] bytes = {72, 101, 108, 108, 111, 32, 74, 97, 118, 97};
    String str1 = new String(bytes);  
    System.out.println(str1);          -> Hello Java
    
   String str2 = new String(bytes, 6, 4);     // 6번 인덱스에서부터 4개 추출
   System.out.println(str2);          -> Java


ex) byte[] bytes = new byte[100];   // 읽은 바이트를 저장하기 위한 배열 생성

    System.out.println("입력 : ");	        // 입력 : Hello	
    int readByteNo = System.in.read(bytes);  // 배열에 읽은 바이트를 저장하고 읽은 바이트 수를 리턴
    
    Stirng str = new String(byte, 0, readByteNo-2);    // 배열을 문자열로 변환
					     // length 매개값으로 배열 길이에서 2 빼준 이유는  
					     // enter + 줄바꿈의 개수를 빼주기 위해서		
    System.out.println(str);			     // 출력 : Hello

	
< 바이트 배열로 변환 >

- 네트워크로 문자열을 전송하는 등의 경우에 문자열을 바이트 배열로 변환함

ex) String str = "안녕하세요";
    byte[] bytes1 = str.getBytes();    // 결과 : 10 (기본 문자셋으로 인코딩함, 알파벳은 1바이트, 한글은 2바이트로 변환)
    byte[] bytes2 = str.getBytes("UTF-8");  // 결과 : 15 (UTF-8을 이용해서 인코딩함, 알파벳은 1바이트, 한글은 3바이트로 변환)	
 

< 문자열 대치 >

- replace()
- 첫번째 매개값의 문자열을 두번째 매개값의 문자열로 대치

ex) String oldStr = "자바는 객체 지향 언어입니다. 자바는 풍부한 API를 지원합니다"
    String newStr = oldStr.replace("자바", "JAVA");

    -> 'JAVA는 객체 지향 언어입니다. JAVA는 풍부한 API를 지원합니다'로 변환


< 문자열 잘라내기>

- substring

ex)  String ssn = "880815-1234567";
     String firstNum = ssn.substring(0, 6);  // 출력 : 880815
     String sescondNum = ssn.substring(7);  // 출력 : 1234567



