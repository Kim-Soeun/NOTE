<라이브러리 살펴보기>

- Gradle은 의존관계가 있는 라이브러리를 함게 다운로드 한다.


  ＊스프링 부트 라이브러리 ＊

   ● spring-boot-starter-web
	● spring-boot-starter-tomcat: 톰캣(웹서버)
	● spring-webmvc : 스프링 웹 MVC
   ● spring-boot-starter-thymeleaf : 타임리프 템플릿 엔진(View)
   ● spring-boot-starter(공통) : 스프링 부트 + 스프링 코어 + 로깅
	● spring-boot
	   ●spring-core
	● spring-boot-starter-logging
	   ● logback, slf4j



   ＊ 테스트 라이브러리 ＊

   ● spring-boot-starter-test
	● junit : 테스트 프레임워크
	● mockito : 목 라이브러리
	● assertj : 테스트 코드를 좀 더 편하게 작성하게 도와주는 라이브러리
	● spring-test: 스프링 통합 테스트 지원


--------------------------------------------------------------------------------------------------------------


<스프링 웹 개발 기초>

  ＊ 웹을 개발하는 세가지 방법 ＊  

     - 정적 컨텐츠
     - MVC와 템플릿 엔진
     - API


1. 정적 컨텐츠

   : 서버에서 따로 가공을 거치지 않고 파일을 웹 브라우저에 그대로 보내는 방식
     원하는 파일을 resources/static 폴더에 넣으면 가공이 들어가지 않고 그대로 반환됨



2. MVC와 템플릿 엔진

   : jsp 같은 것들을 템플릿 엔진이라고 부름 
     정적 컨텐츠처럼 html을 웹 브라우저에 그대로 보내는 것이 아니라, 프로그래밍을 해서 html을 동적으로 바꿔서
     웹 브라우저에 보내는 일을 함. 이런 방법을 사용하기 위해서는 mvc 필요

   - 정적 컨텐츠와의 차이점 : 파일을 웹 페이지에 그대로 전달해주는 것이 정적 컨텐츠의 방식인 반면,
			      MVC와 Template engine 방식은 server에서 약간의 변형을 하여 
			      system을 바꾸서 웹에 띄우는 방식
			      

   ⊙ MVC : Model, View, Controller
   


3. API

   : html과 같은 방식이 아닌, JSON이라는 데이터 구조 포맷으로 클라이언트에게 데이터를 전달하는 방식




-------------------------------------------------------------------------------------------------------------

<단축키>

클래서에 커서두고 ALT + ENTER : create test
