< JSTL >

	
	: JSTL은 JSP에서 빈번하게 사용되는 조건문, 반복문 등을 처리해주는 태그를 모아
	  표준으로 만들어 놓은 라이브러리

	  스크림틀릿 없이 태그만으로 작성할 수 있기 때문에 코드가 간결해짐

----------------------------------------------------------------------------------------------

< 태그 종류 >


1. 코어(Core) 태그

	: 변수 선언, 조건문/반복문, URL 처리 대체하는 태그를 제공

   
   1) <c:set> 태그

	: EL에서 사용할 변수나 자바빈즈를 생성할 때 사용
	  JSP에서 영역에 속성을 저장할 때 사용하는 setAttribute() 메소드 같은 역할


	** 변수 생성 방식 **

	<c:set var="변수명" value="값" scope="영역"/>			-- 직접 값 입력
  	<c:set var="변수명" scope="영역">value 속성에 들어갈 값</c:set> -- 태그 사이에 값 지정 

	<EX>

	-- 변수 선언 --

	<c:set var="directVar" value="100"/>
	<c:set var="betweenVar">변수값 요렇게 설정</c:set>

	-- EL 이용한 변수 출력 --

	<li>directVar : ${directVar}</li>    -- '100'출력(scope 없으면 기본값 page)
	<li>betweenVar : ${betweenVar}</li>  -- '변수값 요렇게 설정' 출력	



	** 자바빈즈 or 컬렉션 생성방식 **

	<c:set var="변수명" value="저장할 객체 혹은 컬렉션" scope="영역" />
	<c:set target="var로 설정한 변수명" property="객체의 속성명" value="속성값" />

	EX)

	-- 자바빈즈 생성 --

	<c:set var="personVar2" value="<%=new Person() %>" scope="request" />
	<c:set target="${personVar2}" property="name" value="정약용" />
	
	<li> 이름 : ${personVar2.name} </li>


	-- Map 컬렉션 이용하기 --

	<%
		Map<String, Person> pMap = new HashMap<>();
		pMap.put("personArgs1", new Person("하위지", 65));
	%>

	<c:set var="personMap" value"<%=pMap%>" scope="request"/>

	<li>이름 : ${personMap.personArgs1.name}</li>
	<li>나이 : ${personMap.personArgs1.age}</li>

	

    2) <c:remove> 태그

	: <c:set> 태그로 설정한 변수를 제거할 때 사용
	  JSP에서 영역의 속성을 제거할 때 사용하는 removeAttribute()와 같은 역할

	** 형식 **
	
	<c:remove var="변수명" scope="영역" />
	
	EX) <c:set var="scopeVar" value="Page Value"/>	-- 생성
	    <c:remove var="scopeVar"/>			-- 삭제


    3) <c:if> 태그

	: 자바의 if와 동일하게 제어 구문 작성할 때 사용
	  하지만 else가 별도로 없기 땜누에 일련의 여러 조건을 나열하는 형태로 작성 x


         ** 형식 **
	
	<c:if test="조건" var="변수명" scope="영역"> 
		조건이 true일 때 출력할 문장
	</c:if>

	EX) <c:if test="${number mod 2 eq 0}" var="result"> 
		${number}는 짝수입니다.<br>
	    </c:if>


    4) <c:choose> <c:when> <c:otherwise> 태그

	: 다중 조건을 통해 판단해야 할 때 사용


	** 형식 ** 

	<c:choose>
		<c:when test="조건1">조건1을 만족하는 경우</c:when>
		<c:when test="조건2">조건2를 만족하는 경우</c:when>
		<c:otherwise>아무 조건도 만족하지 않는 경우</c:otherwise>
	</c:choose> 


	EX) <c:choose>
		<c:when test="${avg >= 90}">A 학점</c:when>
		<c:when test="${avg >= 80}">B 학점</c:when>
		<c:otherwise>F 학점</c:otherwise>
	    </c:choose>


